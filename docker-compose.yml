services:
  keycloak_ai_summarize:
    image: quay.io/keycloak/keycloak:23.0.0
    restart: unless-stopped
    entrypoint: /opt/keycloak/bin/kc.sh start --proxy edge --hostname-strict false --http-port=8180
    environment:
      PROXY_ADDRESS_FORWARDING: true
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_PROXY: edge
      KC_METRICS_ENABLED: true
      KC_DB_URL_PORT: 5432
      KC_DB: postgres
      KC_DB_URL_HOST: postgres_keycloak_ai_summarize
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: $POSTGRES_PASSWORD
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: $KEYCLOAK_ADMIN_PASSWORD
      KEYCLOAK_FRONTEND_URL: http://localhost:8180
      KEYCLOAK_BASE_URL: http://localhost:8180/auth
    ports:
      - 8180:8180
    depends_on:
      - postgres_keycloak_ai_summarize
    networks:
      - keycloak_ai_summarize_dev_network
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8180/auth/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
  postgres_keycloak_ai_summarize:
    image: postgres:16.1
    restart: unless-stopped
    volumes:
      - pgdata_keycloak_ai_summarize:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - keycloak_ai_summarize_dev_network

  spring-server:
    image: spring-server
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    stdin_open: true
    environment:
      KEYCLOAK_URI: http://localhost:8180/auth
      REALM: AiSummarize
    depends_on:
      - keycloak_ai_summarize
    networks:
      - keycloak_ai_summarize_dev_network
    entrypoint: [ "sh", "-c", "sleep 30 && java -Xms512m -Xmx1g -jar app.jar --debug" ]
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8080/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
  react-app:
    image: react-app
    build: ./client/
    ports:
      - "3000:3000"
    stdin_open: true
    networks:
      - monolith_network
    volumes:
      - ./client/:/src/app
      - /src/node_modules
    depends_on:
      - spring-server
volumes:
  pgdata_keycloak_ai_summarize:
  pgdata_app:
networks:
  monolith_network:
    driver: bridge
  keycloak_ai_summarize_dev_network:
    driver: bridge
